APA ITU PHP ???

PHP (Hypertext Preprocessor) adalah bahasa pemrograman server-side yang digunakan terutama untuk pengembangan web. PHP
memungkinkan pengembang untuk membuat halaman web dinamis yang dapat berinteraksi dengan database dan menangani input 
dari pengguna.

 Pengertian dan Fungsi PHP:
1. Server-Side Scripting: PHP dijalankan di server, bukan di browser pengguna. Ketika pengguna mengakses halaman web
yang ditulis dalam PHP, server memproses kode PHP dan menghasilkan HTML yang kemudian dikirimkan ke browser pengguna.

2. Pengembangan Web Dinamis: PHP memungkinkan pembuatan konten web yang berubah-ubah atau disesuaikan, misalnya 
menampilkan hasil pencarian atau mengelola sesi pengguna dalam aplikasi web.

3. Integrasi dengan Database: PHP sering digunakan untuk menghubungkan aplikasi web dengan database seperti MySQL
atau MariaDB, memungkinkan aplikasi untuk menyimpan, mengambil, dan memproses data secara dinamis.

4. Sintaks yang Mudah Dipelajari: PHP memiliki sintaks yang mirip dengan bahasa pemrograman seperti C dan Perl,
membuatnya mudah dipelajari bagi pemula maupun pengembang yang sudah berpengalaman.

5. Portabilitas: PHP dapat berjalan di berbagai sistem operasi seperti Windows, Linux, dan macOS, serta kompatibel
dengan banyak server web seperti Apache dan Nginx.

6. Komunitas dan Sumber Daya yang Luas: PHP memiliki komunitas yang besar dan aktif, dengan banyak tutorial,
dokumentasi, dan framework seperti Laravel yang memudahkan pengembangan aplikasi yang kompleks.

 Penggunaan PHP:
PHP digunakan untuk mengembangkan berbagai jenis aplikasi web, termasuk situs e-commerce, blog, forum, dan sistem
manajemen konten (CMS) seperti WordPress. Fleksibilitasnya dan kemampuannya untuk berintegrasi dengan berbagai database
menjadikannya salah satu bahasa pemrograman yang paling populer di dunia untuk pengembangan web.


SEJARAH PHP

PHP memiliki sejarah yang menarik, dimulai sebagai alat sederhana untuk pengembangan web hingga menjadi salah satu bahasa
pemrograman paling populer di dunia. Berikut adalah rangkuman sejarah PHP:

 Awal Mula PHP:
1. 1994 - Rasmus Lerdorf Membuat PHP: PHP awalnya diciptakan oleh Rasmus Lerdorf pada tahun 1994 sebagai serangkaian
skrip Common Gateway Interface (CGI) yang ditulis dalam bahasa C. Skrip-skrip ini dirancang untuk melacak kunjungan ke
halaman pribadinya dan dikenal sebagai "Personal Home Page Tools" atau PHP Tools.

2. 1995 - Rilis PHP/FI: Pada tahun 1995, Lerdorf merilis kode sumber PHP di bawah lisensi open-source dan menamainya
PHP/FI (Personal Home Page / Form Interpreter). Versi ini memungkinkan pengguna untuk mengembangkan aplikasi web dinamis
dengan lebih mudah, dan menjadi dasar dari apa yang sekarang dikenal sebagai PHP.

 Perkembangan PHP:
3. 1997 - PHP 3.0: Pada tahun 1997, dua pengembang, Zeev Suraski dan Andi Gutmans, mulai bekerja pada PHP untuk
meningkatkan fungsionalitasnya. Mereka menulis ulang interpreter PHP, dan hasilnya adalah PHP 3.0, yang dirilis pada Juni 1998. Pada titik ini, nama "PHP" berubah menjadi "PHP: Hypertext Preprocessor," sebuah rekursif akronim yang masih digunakan hingga sekarang.

4. 2000 - PHP 4.0: Dengan pertumbuhan popularitasnya, Suraski dan Gutmans mengembangkan mesin Zend Engine, yang
menjadi dasar dari PHP 4.0. Versi ini dirilis pada Mei 2000 dan menawarkan peningkatan kinerja serta fitur-fitur baru
seperti session handling dan dukungan untuk berbagai web server.

5. 2004 - PHP 5.0: PHP 5.0 dirilis pada Juli 2004, menghadirkan dukungan untuk pemrograman berorientasi objek yang
lebih baik, serta memperkenalkan Zend Engine II. Versi ini memperluas kemampuan PHP untuk pengembangan aplikasi web yang
lebih kompleks dan kuat.

 Modernisasi PHP:
6. 2015 - PHP 7.0: PHP 7.0 dirilis pada Desember 2015, membawa peningkatan kinerja yang signifikan berkat mesin Zend
Engine baru (Zend Engine 3.0). PHP 7 juga memperkenalkan beberapa fitur baru seperti operator spaceship, pernyataan type
hinting yang lebih ketat, dan dukungan untuk null coalescing operator. PHP 7 merupakan lompatan besar dalam hal efisiensi dan kecepatan.

7. 2020 - PHP 8.0: PHP 8.0 dirilis pada November 2020 dengan fitur baru yang kuat seperti Just-In-Time (JIT)
compilation, yang lebih meningkatkan kinerja PHP, serta menambahkan fitur-fitur seperti union types, attributes, dan
nullsafe operator.

 PHP Saat Ini:
PHP terus berkembang dengan komunitas yang besar dan kontribusi dari pengembang di seluruh dunia. Meskipun munculnya
bahasa pemrograman baru, PHP tetap menjadi salah satu bahasa paling populer untuk pengembangan web, digunakan oleh
jutaan situs web di seluruh dunia, termasuk WordPress, Facebook, dan Wikipedia.

APA ITU STRING ???

Dalam pemrograman, string adalah tipe data yang digunakan untuk merepresentasikan teks atau urutan karakter. String
dapat berisi huruf, angka, simbol, dan spasi. String sering digunakan untuk menyimpan dan memanipulasi teks, seperti nama,
kalimat, atau paragraf.

 Ciri-ciri String:
1. Tipe Data: String dianggap sebagai tipe data dasar dalam banyak bahasa pemrograman, seperti Python, Java, PHP,
C++, dan lainnya.

2. Dibatasi oleh Tanda Kutip: String biasanya dikelilingi oleh tanda kutip, baik tanda kutip tunggal (' ') atau tanda
kutip ganda (" "). Misalnya, `"Hello, World!"` atau `'12345'`.

3. Immutability (Tidak Bisa Diubah): Dalam banyak bahasa pemrograman, string bersifat immutable, artinya setelah
string dibuat, tidak dapat diubah. Jika ada perubahan yang dilakukan, maka akan menghasilkan string baru.

4. Indeks: Karakter dalam string diindeks, biasanya dimulai dari 0. Ini memungkinkan pengembang untuk mengakses
karakter individu dalam string. Misalnya, dalam string `"Hello"`, `H` berada di indeks 0, `e` di indeks 1, dan seterusnya.

5. Operasi pada String:
   - Penggabungan (Concatenation): Dua atau lebih string dapat digabungkan menjadi satu string. Misalnya, `"Hello, " . "World!"` menghasilkan `"Hello, World!"`.
   - Pengulangan (Repetition): String dapat diulang beberapa kali. Misalnya, `"Ha" * 3` menghasilkan `"HaHaHa"`.
   - Pemotongan (Slicing): Sebagian string dapat diambil menggunakan slicing. Misalnya, `"Hello"[1:4]` menghasilkan `"ell"`.
   - Panjang String: Panjang string dapat diukur dengan fungsi seperti `len()` dalam Python atau `strlen()` dalam PHP.

 Contoh String:
- `'12345'`
- `"It's a beautiful day!"`
- `" " (spasi juga dianggap sebagai string)`

 Penggunaan String:
String digunakan dalam berbagai situasi, seperti menampilkan pesan kepada pengguna, menyimpan input pengguna,
memanipulasi teks untuk pencarian, pemrosesan data, dan banyak lagi. String adalah bagian integral dari pemrograman, dan
hampir semua aplikasi akan melibatkan manipulasi string dalam beberapa bentuk.

ABOUT ELEPHPANT

Ikon gajah yang sering dikaitkan dengan PHP dikenal sebagai "elephpant" dan diciptakan oleh Vincent Pontier, seorang
desainer grafis asal Prancis. Ikon ini pertama kali diperkenalkan pada tahun 1998 dan sejak itu menjadi simbol tidak
resmi dari komunitas PHP.

 Detail Tentang Elephpant:
- Nama: Elephpant (kombinasi dari "elephant" dan "PHP").
- Desain: Elephpant memiliki bentuk gajah yang khas, dengan huruf "PHP" yang disusun pada badan gajah tersebut.
- Tujuan: Desain ini dibuat untuk memberikan identitas yang unik dan ramah kepada komunitas PHP, menjadikan elephpant
sebagai maskot yang dikenal luas dalam komunitas pengembang PHP.
- Penggunaan: Elephpant sering digunakan dalam berbagai materi promosi, merchandise, dan bahkan sebagai boneka yang
populer di kalangan pengembang PHP di seluruh dunia.

Elephpant telah menjadi bagian penting dari budaya PHP, mewakili semangat komunitas open-source yang inklusif dan
kolaboratif.

ABOUT ECHO

`echo` adalah perintah dalam PHP yang digunakan untuk menampilkan teks atau output lainnya ke browser. Ini adalah salah
satu cara paling sederhana dan umum digunakan untuk menampilkan data dalam skrip PHP.

 Fitur Utama `echo`:

1. Menampilkan Output: `echo` digunakan untuk mengirimkan data dari server ke browser, yang dapat berupa string,
variabel, atau hasil dari ekspresi.

2. Sintaks yang Sederhana: 
   - Dengan Tanda Kurung: `echo("Hello, World!");`
   - Tanpa Tanda Kurung: `echo "Hello, World!";`
   
   Keduanya valid dalam PHP, tetapi penggunaan tanda kurung sering kali digunakan untuk meningkatkan keterbacaan kode.

3. Mendukung Multiple Parameter: `echo` dapat menerima beberapa parameter yang dipisahkan dengan koma, seperti
`echo "Hello, ", "World!";`, dan akan menampilkan hasilnya sebagai satu string.

4. Tidak Mengembalikan Nilai: `echo` tidak mengembalikan nilai dan hanya digunakan untuk menampilkan output. Jika
Anda perlu mengembalikan nilai dari fungsi, Anda bisa menggunakan `return`.

5. Penggunaan Umum: `echo` sering digunakan untuk menampilkan teks statis, hasil dari variabel, atau data yang
dihasilkan dari operasi atau fungsi.

 Contoh Penggunaan `echo`:


<?php
// Menampilkan teks sederhana
echo "Hello, World!";

// Menampilkan teks dengan variabel
$name = "Alice";
echo "Hello, " . $name . "!";

// Menampilkan beberapa string
echo "Hello, ", "World!";

// Menampilkan hasil operasi
echo 2 + 3;
?>


 Perbedaan `echo` dengan `print`:
- `print`: Mirip dengan `echo`, tetapi `print` hanya dapat menerima satu parameter dan mengembalikan nilai `1`, yang
dapat berguna dalam konteks tertentu (misalnya, dalam ekspresi).
- `echo`: Lebih cepat sedikit dibandingkan `print` karena tidak mengembalikan nilai dan dapat menerima beberapa
parameter.

 Kapan Menggunakan `echo`:
`echo` adalah pilihan yang baik untuk menampilkan output yang sederhana dan tidak memerlukan pengembalian nilai. Ini
adalah perintah yang sangat umum dalam PHP dan digunakan secara luas dalam skrip PHP untuk menghasilkan HTML dinamis atau
menampilkan data kepada pengguna.

KENAPA HARUS BELAJAR PHP ??

Belajar PHP dapat bermanfaat bagi kita dalam berbagai konteks pengembangan web. Berikut adalah beberapa alasan mengapa
mempelajari PHP bisa menjadi keputusan yang baik:

 1. Pengembangan Web Dinamis:
PHP adalah bahasa server-side yang memungkinkan Anda untuk membuat halaman web dinamis yang dapat berinteraksi dengan
pengguna, mengakses database, dan memproses data formulir. Ini sangat penting untuk membangun aplikasi web yang kompleks
dan interaktif.

 2. Populer dan Banyak Digunakan:
PHP adalah salah satu bahasa pemrograman web yang paling populer dan banyak digunakan. Banyak situs web dan aplikasi
terkenal, termasuk WordPress, Facebook, dan Wikipedia, menggunakan PHP. Mempelajari PHP memberi Anda keterampilan yang
relevan dan dicari di pasar kerja.

 3. Kompatibilitas dengan Database:
PHP sering digunakan bersama dengan sistem manajemen basis data seperti MySQL atau MariaDB. Jika Anda mempelajari PHP,
Anda juga akan belajar cara berinteraksi dengan database untuk menyimpan, mengambil, dan memanipulasi data.

 4. Framework dan Alat yang Kuat:
Ada banyak framework PHP yang kuat, seperti Laravel, Symfony, dan CodeIgniter, yang membantu mempercepat pengembangan
aplikasi web dan mempromosikan praktik pengkodean yang baik. Mempelajari PHP membuka pintu untuk menggunakan alat-alat
ini yang dapat meningkatkan produktivitas Anda.

 5. Komunitas dan Dukungan:
PHP memiliki komunitas pengembang yang besar dan aktif. Ada banyak forum, tutorial, dan dokumentasi yang tersedia secara
online, yang dapat membantu Anda belajar dan mengatasi masalah yang mungkin Anda hadapi.

 6. Mudah Dipelajari:
PHP memiliki sintaks yang relatif sederhana dan mudah dipelajari, terutama bagi mereka yang sudah memiliki pengalaman
dengan bahasa pemrograman lain seperti C atau JavaScript. Ini menjadikannya pilihan yang baik untuk pemula dalam
pengembangan web.

 7. Biaya yang Rendah dan Aksesibilitas:
PHP adalah open-source dan gratis untuk digunakan, sehingga memungkinkan Anda untuk memulai pengembangan web tanpa biaya
lisensi perangkat lunak. Banyak server web dan layanan hosting juga mendukung PHP secara default.

 8. Kemampuan untuk Menangani Berbagai Tugas:
Selain pengembangan web, PHP juga digunakan untuk tugas-tugas lain seperti skrip otomatisasi, pemrosesan data, dan
integrasi dengan berbagai API. Ini memberikan fleksibilitas tambahan dalam jenis proyek yang dapat Anda kerjakan.

 9. Peluang Karir:
Banyak pekerjaan di bidang pengembangan web memerlukan keterampilan PHP. Memiliki pemahaman yang kuat tentang PHP dapat
meningkatkan prospek pekerjaan Anda dan membuka peluang di berbagai industri yang membutuhkan pengembangan web.

 10. Integrasi dengan Teknologi Lain:
PHP dapat dengan mudah diintegrasikan dengan berbagai teknologi lain, seperti HTML, CSS, JavaScript, dan API pihak ketiga,
membuatnya menjadi alat yang berguna dalam pengembangan aplikasi web yang kompleks.

Dengan mempelajari PHP, Anda mendapatkan keterampilan yang dapat diterapkan dalam banyak konteks pengembangan web,
memungkinkan Anda untuk membangun dan mengelola situs web dan aplikasi yang dinamis dan interaktif.

APK YANG DIBUAT DENGAN PHP

1. Facebook: 
2. Odoo: Open-source yang menyediakan modul untuk berbagai fungsi bisnis, termasuk
3. WordPress: Platform manajemen konten (CMS) yang sangat populer untuk membuat blog dan situs web. WordPress, serta
 banyak tema dan plugin yang digunakan dalam ekosistemnya, ditulis dalam PHP.

 APA ITU SINTAKS ??

 Sintaks dalam pemrograman merujuk pada aturan dan struktur yang menentukan bagaimana kode harus ditulis agar dapat
 dipahami dan dijalankan oleh compiler atau interpreter. Setiap bahasa pemrograman memiliki sintaks yang unik, yang
 mencakup aturan tentang bagaimana menggunakan kata kunci, operator, tanda baca, dan elemen lain dalam kode.

 Komponen Utama Sintaks dalam Pemrograman:

1. Kata Kunci (Keywords):
   - Kata kunci adalah kata atau frasa yang memiliki makna khusus dalam bahasa pemrograman dan tidak dapat digunakan
   sebagai nama variabel atau fungsi. Misalnya, if, while, return, dan function adalah kata kunci dalam banyak bahasa
   pemrograman.

2. Operator:
   - Operator adalah simbol yang digunakan untuk melakukan operasi pada variabel dan nilai. Contohnya termasuk + untuk
   penjumlahan, - untuk pengurangan, dan == untuk perbandingan.

3. Tanda Kurung:
   - Tanda kurung, seperti () (parentheses), {} (braces), dan [] (brackets), digunakan untuk mengelompokkan ekspresi,
   mendefinisikan blok kode, dan mengakses elemen array atau objek.

4. Tanda Baca:
   - Tanda baca seperti titik koma ;, koma ,, dan titik . membantu memisahkan pernyataan, elemen, dan anggota dalam
   kode.

5. Variabel dan Tipe Data:
   - Variabel adalah tempat untuk menyimpan data, dan tipe data mendefinisikan jenis data yang dapat disimpan, seperti
   integer, float, string, dan boolean. Sintaks menentukan bagaimana variabel dideklarasikan dan diakses.

6. Struktur Kontrol:
   - Struktur kontrol seperti if, else, for, dan while digunakan untuk mengontrol alur eksekusi kode berdasarkan kondisi
   dan iterasi.

7. Fungsi dan Metode:
   - Fungsi atau metode adalah blok kode yang melakukan tugas tertentu dan dapat dipanggil di berbagai tempat dalam 
   program. Sintaks menentukan cara mendeklarasikan dan memanggil fungsi.

 Contoh Sintaks dalam Beberapa Bahasa:

- PHP:
  
  <?php
  // Deklarasi variabel
  $name = "Alice";
  
  // Struktur kontrol
  if ($name == "Alice") {
      echo "Hello, Alice!";
  }
  ?>
  

- Python:
  ```python
   Deklarasi variabel
  name = "Alice"
  
   Struktur kontrol
  if name == "Alice":
      print("Hello, Alice!")
  

- JavaScript:
  ```javascript
  // Deklarasi variabel
  let name = "Alice";
  
  // Struktur kontrol
  if (name === "Alice") {
      console.log("Hello, Alice!");
  }
  ```

 Pentingnya Sintaks:
Memahami sintaks adalah keterampilan dasar dalam pemrograman karena:
- Mencegah Kesalahan: Kesalahan sintaks dapat menyebabkan kode tidak dapat dijalankan atau menghasilkan perilaku yang
tidak diinginkan.
- Memudahkan Pembacaan Kode: Sintaks yang benar membuat kode lebih mudah dibaca dan dipahami, baik oleh penulis kode itu
sendiri maupun oleh orang lain.
- Kompatibilitas: Mengikuti sintaks yang tepat memastikan bahwa kode dapat dijalankan di lingkungan yang sesuai dengan
bahasa pemrograman yang digunakan.

Memahami dan mengikuti aturan sintaks yang benar adalah langkah pertama dalam menulis kode yang efektif dan dapat
berfungsi dengan baik.

ABOUT ASSIGMENT

Assignment dalam pemrograman merujuk pada proses memberikan nilai kepada variabel. Ini adalah operasi dasar yang
memungkinkan Anda untuk menyimpan dan mengelola data dalam program Anda. Assignment sering kali dilakukan menggunakan
operator assignment, yang umumnya adalah tanda sama dengan `=`.

 Cara Kerja Assignment:

1. Deklarasi Variabel:
   - Sebelum melakukan assignment, Anda biasanya mendeklarasikan variabel. Variabel adalah nama yang Anda gunakan untuk
   menyimpan data.
   
   php
   $x; // Deklarasi variabel di PHP
   

2. Memberikan Nilai:
   - Anda kemudian memberikan nilai ke variabel tersebut menggunakan operator assignment. 

   php
   $x = 10; // Memberikan nilai 10 ke variabel x
   

3. Menggunakan Variabel:
   - Setelah nilai diberikan, Anda dapat menggunakan variabel tersebut dalam operasi lain, seperti perhitungan atau
   fungsi.

   php
   $y = $x + 5; // Menggunakan nilai dari x untuk perhitungan
   

 Contoh Assignment dalam Berbagai Bahasa Pemrograman:

- PHP:
  php
  <?php
  $name = "Alice"; // Assignment: memberikan nilai "Alice" ke variabel $name
  $age = 30; // Assignment: memberikan nilai 30 ke variabel $age
  ?>
  

- Python:
  python
  name = "Alice" # Assignment: memberikan nilai "Alice" ke variabel name
  age = 30 # Assignment: memberikan nilai 30 ke variabel age
  

- JavaScript:
  ```javascript
  let name = "Alice"; // Assignment: memberikan nilai "Alice" ke variabel name
  let age = 30; // Assignment: memberikan nilai 30 ke variabel age
  ```

 Jenis-Jenis Assignment:

1. Simple Assignment:
   - Menetapkan nilai langsung ke variabel.
   - Contoh: `x = 5;`

2. Compound Assignment:
   - Menggabungkan operasi aritmatika dengan assignment.
   - Contoh: `x += 5;` yang setara dengan `x = x + 5;`.

3. Multiple Assignment:
   - Menetapkan nilai yang sama ke beberapa variabel sekaligus.
   - Contoh: `a = b = c = 10;`.

 Pentingnya Assignment:

- Pengelolaan Data: Assignment memungkinkan Anda untuk menyimpan data dalam variabel yang bisa diakses dan dimanipulasi
di bagian lain dalam program.
- Memudahkan Operasi: Dengan menyimpan nilai dalam variabel, Anda dapat melakukan operasi yang lebih kompleks dan membuat
kode lebih mudah dibaca.
- Mengatur Alur Program: Variabel yang diassign dapat digunakan untuk menentukan alur program, seperti dalam struktur
kontrol dan fungsi.

Assignment adalah konsep fundamental dalam pemrograman yang memungkinkan Anda untuk menyimpan dan mengelola data, serta
melakukan operasi yang diperlukan untuk mencapai tujuan program Anda.

apa itu var_dumb ??

`var_dump()` adalah fungsi bawaan dalam PHP yang digunakan untuk menampilkan informasi detail tentang suatu variabel.
Ini sangat berguna untuk debugging karena memberikan informasi lengkap tentang tipe data dan nilai variabel, serta
struktur data jika variabel tersebut adalah array atau objek.

 Cara Kerja `var_dump()`:

1. Menampilkan Tipe Data dan Nilai:
   - `var_dump()` menampilkan tipe data dari variabel dan nilainya. Jika variabel adalah array atau objek, ia juga akan
   menampilkan informasi tentang elemen atau properti yang ada.

2. Format Output:
   - Output dari `var_dump()` adalah format yang mudah dibaca oleh manusia dan memberikan informasi yang mendetail,
   termasuk panjang string atau ukuran array.

 Sintaks:
php
var_dump(mixed $value): void
```

 Contoh Penggunaan:

1. Menampilkan Tipe Data dan Nilai:
   ```php
   <?php
   $number = 123;
   $text = "Hello, World!";
   $array = array(1, 2, 3);
   
   var_dump($number); // Output: int(123)
   var_dump($text);   // Output: string(13) "Hello, World!"
   var_dump($array);  // Output: array(3) { [0]=> int(1) [1]=> int(2) [2]=> int(3) }
   ?>
   ```

2. Menampilkan Informasi tentang Objek:
   ```php
   <?php
   class Person {
       public $name;
       public $age;
       
       function __construct($name, $age) {
           $this->name = $name;
           $this->age = $age;
       }
   }
   
   $person = new Person("Alice", 30);
   var_dump($person); // Output: object(Person)#1 (2) { ["name"]=> string(5) "Alice" ["age"]=> int(30) }
   ?>
   ```

3. Debugging Array Multidimensi:
   ```php
   <?php
   $data = array(
       "name" => "Alice",
       "age" => 30,
       "address" => array(
           "street" => "123 Main St",
           "city" => "Wonderland"
       )
   );
   
   var_dump($data);
   // Output: array(3) { ["name"]=> string(5) "Alice" ["age"]=> int(30) ["address"]=> array(2) { ["street"]=> string(13) 
   "123 Main St" ["city"]=> string(9) "Wonderland" } }
   ?>
   ```

 Kegunaan `var_dump()`:

- Debugging: `var_dump()` sangat berguna untuk debugging karena memberikan pandangan menyeluruh tentang data yang
disimpan dalam variabel.
- Analisis Data: Membantu dalam memahami struktur dan konten variabel yang kompleks, seperti array multidimensi atau
objek.
- Pengembangan: Mengidentifikasi masalah atau kesalahan dengan cepat dengan memeriksa tipe data dan nilai yang
sebenarnya.

 Alternatif:

- `print_r()`: Fungsi lain yang digunakan untuk menampilkan informasi tentang variabel, tetapi tidak memberikan detail
tentang tipe data seperti `var_dump()`.
- `var_export()`: Menampilkan representasi PHP yang dapat dieksekusi dari variabel, memberikan format yang bisa digunakan
dalam kode PHP.

`var_dump()` adalah alat yang sangat berguna dalam pengembangan PHP untuk memahami dan memeriksa data dalam variabel.

CONTOH SINTAKS

<?php
$variable = "Hello, World!";
?>
#
<?php
$number = 10;

if ($number > 5) {
    echo "Number is greater than 5.";
} else {
    echo "Number is 5 or less.";
}
?>
#
<?php
$fruits = array("apple", "banana", "cherry");

foreach ($fruits as $fruit) {
    echo $fruit . "<br>";
}
?>
#

ARRAYY !!

Array adalah struktur data yang digunakan untuk menyimpan beberapa nilai dalam satu variabel. Di dalam array, nilai-nilai
tersebut diorganisir dalam urutan tertentu dan dapat diakses menggunakan indeks atau kunci.

DYNAMIC

Website Dinamis (Dynamic Website) adalah situs web yang kontennya dapat berubah atau disesuaikan secara otomatis
berdasarkan interaksi pengguna, data dari server, atau kondisi tertentu. Berbeda dengan situs web statis, di mana
kontennya tetap dan tidak berubah tanpa perubahan manual pada file HTML, situs web dinamis dapat menghasilkan konten
yang bervariasi setiap kali pengguna mengaksesnya.