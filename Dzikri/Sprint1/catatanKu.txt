PHP:
adalah bahasa pemrograman yang digunakan terutama untuk pengembangan web

Kenapa kita mengguanakan PHP:
-relatif mudah untuk pemula
-pre-requisite :HTML + CSS
-gratis  & open source
-dukungan komunitas besar
-dukumentasi yang lengkap
-PHP di buat khusus untuk membuat web
-kebanyakan website yang ada saat ini memngguanakan PHP
-banyak website besar yang menggunakan PHP

apa yang akan kita pelajari 
-client-side vs. server-side scripting
-static vs. dinamic website
-persiapan lingkungan pengembangan 
-sintaks PHP
-array
-request method
-studi kasus website sederhana 
-data base
-crud (Create,Read,Update,Delete)
-login & registrasi
-session & cookie
-ajax
-upload file
-reporting
-web hosting

karakteristik bahasa php 
-ektensi file nya harus .php
-di tulis didalam tag php
-delimter
-di awali dengan <?php
-diakhiri dengan ?>
-bisa mengguanakan bersamaan dengan HTML
-mengikuti bahasa C

client side scripting

Client Side
    Dalam Konteks Php, "Client-Side" Merujuk Pada Operasi Atau Eksekusi Kode Yang Terjadi
    Di Sisi Klien (Browser Pengguna), Bukan Di Sisi Server. 
    Php Sendiri Adalah Bahasa Pemrograman Server-Side, Yang Berarti Bahwa Kode Php Dieksekusi Di 
    Server Dan Hasilnya Dikirim Ke Browser Klien Dalam Bentuk Html, Css, Dan Javascript.

    Php Ngga Bisa Di Inspect Berbeda Dengan Html Dan Css
Server-side 
    Server-side merujuk pada proses yang terjadi di sisi server dalam arsitektur client-server. 
Ini berarti bahwa ketika sebuah permintaan (request) dibuat oleh pengguna melalui browser (client), 
server yang bertanggung jawab untuk memproses permintaan tersebut, menjalankan logika aplikasi, 
mengakses database jika diperlukan, dan kemudian mengirimkan respons (response) kembali ke client.

sintaks PHP
 Sintaks dalam PHP adalah aturan dan struktur penulisan dalam kode yang harus diikuti agar program dapat 
 berjalan dengan benar di web . 

 echo,print : Fungsi echo adalah salah satu cara paling sederhana dan cepat untuk menghasilkan output di PHP.
 print_r : adalah fungsi di PHP yang digunakan untuk mencetak atau menampilkan informasi tentang sebuah 
 variabel dengan cara yang mudah dibaca. Fungsi ini sangat berguna untuk debugging, terutama ketika bekerja 
 dengan array atau objek, karena print_r menampilkan struktur lengkap dari variabel tersebut.
 var_dump : adalah fungsi yang digunakan untuk menampilkan informasi tentang variabel, 
 termasuk tipe datanya dan nilainya. Ini sangat berguna untuk debugging karena memberikan 
 detail lengkap tentang isi dari suatu variabel.

 " lebih sakti dari pada '

 penulisan sintaks PHP
 1.PHP di dalam HTML
 2.Html di dalam php

 variabel dan tipe data 
 variabel

 Variabel adalah sebuah nama yang diberikan untuk menyimpan nilai 
 atau data yang dapat digunakan dan dimanipulasi dalam program
 
 variabel tidak boleh di awali dengan angka, tapi boleh mengandung angka
 $nama1 = "dzikri";
 

 $nama = "adzri rabbani";
 echo "halo nama saya $nama";

 operator
 aritmatika
 + - * / %
 $x = 10;
 $y = 20;
 echo $x * $y;

 penggabung string / concatenation /concat
 .
$nama_depan = "dzikri";
$nama_belakang = "rabbani";
echo $nama_depan ." ". $nama_belakang;

assignment (operator penugasan)
=,+=,-=,*=,/=,%=,.=

$x = 1;
$x %= 5;
echo $x;

$nama = "Adzri";
$nama .= " ";
$nama .= "rabbani";
echo $nama ;

operator perbandingan 
<,>,<=,>=,==,!=
var_dump(5 == "5")

operator identitas
===, !==
var_dump(5 === "5")

operator logika
&&, ||, !

$x = 10;
var_dump($x < 20 || $x % 2 == 0); 


 $nama = "adzri";
 echo "nama saya $nama";

 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Type data PHP


Mengapa Tipe Data Penting?
1. Validasi Data: Memastikan bahwa data yang diolah sesuai dengan harapan. 
   Misalnya, jika variabel seharusnya menyimpan angka, tapi Anda memasukkan teks, 
   program bisa menghasilkan kesalahan.

2. Efisiensi Memori: Berbeda tipe data memiliki kebutuhan memori yang berbeda. 
   Misalnya, menyimpan angka dalam tipe data integer lebih efisien daripada dalam tipe data string.

3. Operasi yang Tepat: Tipe data memastikan bahwa operasi yang dilakukan pada data adalah operasi 
   yang benar dan sesuai, seperti penjumlahan untuk angka atau penggabungan untuk teks.

1. INTEGER
Tipe data untuk angka bulat, baik positif maupun negatif.

<?php
$integer = 42; // Bilangan bulat positif
$negativeInteger = -15; // Bilangan bulat negatif
?>

2. Float (Double)
Tipe data untuk angka desimal.

<?php
$float = 3.14; // Angka desimal
$negativeFloat = -2.718; // Angka desimal negatif
?>

3. String
Tipe data untuk menyimpan teks. String dapat menggunakan tanda kutip ganda atau tunggal.

<?php
$string1 = "Hello, World!"; // Teks dengan tanda kutip ganda
$string2 = 'Hello, PHP!'; // Teks dengan tanda kutip tunggal
?>

4. Boolean
Tipe data untuk nilai benar (true) atau salah (false).

<?php
$isTrue = true; // Nilai benar
$isFalse = false; // Nilai salah
?>

5. Array
Tipe data yang digunakan untuk menyimpan beberapa nilai dalam satu variabel. Array bisa berupa indexed 
(berbasis angka) atau associative (berbasis kunci-nilai).

<?php
// Indexed Array
$colors = array("red", "green", "blue");

// Associative Array
$person = array("first_name" => "John", "last_name" => "Doe");
?>

6. Object
Tipe data yang digunakan untuk menyimpan instansi dari kelas. PHP mendukung pemrograman berorientasi objek.

<?php
class Person {
    public $name;
    public $age;

    function __construct($name, $age) {
        $this->name = $name;
        $this->age = $age;
    }

    function greet() {
        return "Hello, my name is " . $this->name;
    }
}

$person = new Person("Alice", 30);
echo $person->greet(); // Output: Hello, my name is Alice
?>

7. NULL
Tipe data yang digunakan untuk menyimpan nilai yang tidak ada. NULL adalah sebuah nilai spesial yang menggambarkan variabel tanpa nilai.

<?php
$var = NULL; // Nilai NULL
?>

8. Resource
Tipe data khusus yang digunakan untuk menyimpan referensi ke sumber daya eksternal, seperti file atau koneksi database.

<?php
$file = fopen("example.txt", "r"); // Membuka file dan menyimpan resource
if ($file) {
    // Operasi pada file
    fclose($file); // Menutup file
}
?>

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<?php
$integer = 10; // Tipe data integer
$float = 3.14; // Tipe data float
$string = "Hello"; // Tipe data string
$boolean = true; // Tipe data boolean
$array = array(1, 2, 3); // Tipe data array
$object = new stdClass; // Tipe data object
$nullValue = NULL;  // Tipe data NULL
?>

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Operator Logika
Operator logika adalah operator yang digunakan untuk melakukan operasi pada nilai-nilai logika (boolean).

1. AND ( && atau and )
ðŸ”˜ Menghasilkan true jika kedua operan bernilai true.
ðŸ”˜ Jika salah satu atau kedua operan bernilai false, hasilnya false.

2. OR ( || atau or )
ðŸ”˜ Menghasilkan true jika salah satu dari operan bernilai true.
ðŸ”˜ Hanya akan menghasilkan false,  jika  kedua operan bernilai false.

3. NOT (!)
ðŸ”˜ Operator ini digunakan untuk membalik nilai logika.
ðŸ”˜ Jika operan bernilai true,  hasilnya akan false , dan sebaliknya. 

4. XOR ( xor )
ðŸ”˜ Menghasilkan true jika hanya salah satu dari operan bernilai true.
ðŸ”˜ Akan menghasilkan false jika kedua operan bernilai true atau kedua operan bernilai false.

Prioritas Operator Logika
Di PHP, operator logika memiliki prioritas atau urutan eksekusi yang berbeda:

1. NOT ( ! ) memiliki prioritas tertinggi.

2. AND ( && atau and ) lebih diutamakan daripada OR ( || atau or ).

3. XOR ( xor ) memiliki prioritas yang lebih rendah dibandingkan dengan and dan ! .

Namun, untuk memastikan kejelasan dalam kode, sering kali operator logika dikelompokkan menggunakan tanda kurung ()


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Contoh Penggunaan Operator Assignment

// Penugasan dasar
$x = 10; // $x = 10

// Penambahan dan Penugasan
$x += 5; // $x = 15 (10 + 5)

// Pengurangan dan Penugasan
$x -= 3; // $x = 12 (15 - 3)

// Perkalian dan Penugasan
$x *= 2; // $x = 24 (12 * 2)

// Pembagian dan Penugasan
$x /= 4; // $x = 6 (24 / 4)

// Modulus dan Penugasan
$x %= 5; // $x = 1 (6 % 5)

// Konkatenasi dan Penugasan
$str = "Hello";
$str .= " World!"; // $str = "Hello World!"